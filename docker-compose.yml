version: "3.9"

services:
  db:
    image: postgres:14.1
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=herfeei
      - POSTGRES_USER=herfeei
      - POSTGRES_PASSWORD=herfeei

  rabbitmq:
    image: "rabbitmq:alpine"
    container_name: rabbit
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"

  django:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    container_name: django
    command: ./docker/web_entrypoint.sh
    environment:
      - DATABASE_URL=psql://herfeei:herfeei@db:5432/herfeei
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    # command: celery -A herfeei.tasks worker -l info --without-gossip --without-mingle --without-heartbeat
    container_name: worker
    command: ./docker/celery_entrypoint.sh
    environment:
      - DATABASE_URL=psql://herfeei:herfeei@db:5432/herfeei
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  beats:
    build:
      context: .
      dockerfile: docker/production.Dockerfile
    # command: celery -A herfeei.tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    container_name: beats
    command: ./docker/beats_entrypoint.sh
    environment:
      - DATABASE_URL=psql://herfeei:herfeei@db:5432/herfeei
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  nginx:
    build:
      context: .
      dockerfile: docker/nginx.Dockerfile
    container_name: nginx
    depends_on:
      - django
    ports:
      - "80:80"
    restart: on-failure
    volumes:
      - ./staticfiles:/staticfiles

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio/data:/data
    environment:
      MINIO_ACCESS_KEY: TYOUldgc5EKHGFNd5xqi
      MINIO_SECRET_KEY: pHKM5d18KInqAE95AxcUwqVUBa3gQoKVZDv3tjvF
    command: server /data --console-address ":9001"
